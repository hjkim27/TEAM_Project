<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardDao">
	<insert id="insertArticle" parameterType="HashMap">
		insert into BOARD(NUM, BOARDCODE, WRITER, TITLE, CONTENT, NOTIFY)
		values (BOARD_SEQ.nextval, #{boardCode}, #{nickname}, #{title}, #{content}, #{notify})
		<selectKey resultType="Integer" keyProperty="NUM">
			select NVL(max(NUM),0) from BOARD
		</selectKey>
	</insert>
	<select id="readArticle" parameterType="Integer" resultType="boardVo">
		select * from BOARD where NUM=#{num}
	</select>
	<update id="updateArticle" parameterType="HashMap">
		update BOARD set TITLE=#{title}, CONTENT=#{content}, BOARDCODE=#{boardCode}, MODDATE=sysdate
		where NUM=#{num}
	</update>
	<delete id="deleteArticle" parameterType="Integer">
		delete BOARD where NUM=#{num}
	</delete>
	
	
	<update id="updateHit" parameterType="Integer">
		update BOARD set HIT=HIT+1 where NUM=#{num}
	</update>
	<update id="updateHeart" parameterType="Integer">
		update BOARD set HEART=HEART+1 where NUM=#{num}
	</update>
	<update id="changeNotify" parameterType="HashMap">
		update BOARD set NOTIFY=#{notify} where NUM=#{num}
	</update>
	
	
	
	<select id="selectListNotify" parameterType="String" resultType="HashMap">
		select NUM, WRITER, TITLE, REGDATE, MODDATE 
    		from (select ROWNUM RNUM, NUM, WRITER, TITLE, REGDATE, MODDATE 
					from (select * from BOARD order by REGDATE desc, NUM desc) 
					<if test="_parameter!=null">
					where BOARDCODE=#{boardCode} and NOTIFY='notice'); 
					</if>
					<if test="_parameter==null">
					where NOTIFY='yes' or NOTIFY='notice'); 
					</if>
	</select>
	<select id="selectListBoard" parameterType="HashMap" resultType="HashMap">
		select ROWNUM RNUM, NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		from (
		    select NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		    from (
		        (select NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		        from BOARD where BOARDCODE=#{boardCode} and notify='no') b
		            left outer join
		        (select count(BOARDNUM) cnt, BOARDNUM from BOARD_REF group by BOARDNUM) rb
		        on b.NUM=rb.BOARDNUM)
		    order by REGDATE desc, NUM desc
		    )
		where ROWNUM <![CDATA[>=]]> #{startNum} and ROWNUM <![CDATA[<=]]> #{endNum};
	</select>
	<select id="findListBoard" parameterType="HashMap" resultType="HashMap">
		select ROWNUM RNUM, NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		from (
		    select NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		    from (
		        (select NUM, WRITER, TITLE, REGDATE, MODDATE, HIT, HEART 
		        from BOARD where BOARDCODE=#{boardCode} and notify='no'
					<if test="type!=null">
					and (${type} like '%'||#{word}||'%')
					</if>
					<if test="type2!=null">
					and (${type} like '%'||#{word}||'%' or ${type2} like '%'||#{word}||'%')
					</if>
		        ) b
		            left outer join
		        (select count(BOARDNUM) cnt, BOARDNUM from BOARD_REF group by BOARDNUM) rb
		        on b.NUM=rb.BOARDNUM)
		    order by REGDATE desc, NUM desc
		    )
		where ROWNUM <![CDATA[>=]]> #{startNum} and ROWNUM <![CDATA[<=]]> #{endNum};
	</select>
	<select id="selectBoardNumWhenDropMember" parameterType="String" resultType="Integer">
		select NUM from BOARD where WRITER=#{nickname}
	</select>
</mapper>